<?php
/**
 * @file
 * Zen theme's implementation to display the basic html structure of a single
 * Drupal page.
 *
 * Variables:
 * - $css: An array of CSS files for the current page.
 * - $language: (object) The language the site is being displayed in.
 *   $language->language contains its textual representation. $language->dir
 *   contains the language direction. It will either be 'ltr' or 'rtl'.
 * - $rdf_namespaces: All the RDF namespace prefixes used in the HTML document.
 * - $grddl_profile: A GRDDL profile allowing agents to extract the RDF data.
 * - $head_title: A modified version of the page title, for use in the TITLE
 *   tag.
 * - $head_title_array: (array) An associative array containing the string parts
 *   that were used to generate the $head_title variable, already prepared to be
 *   output as TITLE tag. The key/value pairs may contain one or more of the
 *   following, depending on conditions:
 *   - title: The title of the current page, if any.
 *   - name: The name of the site.
 *   - slogan: The slogan of the site, if any, and if there is no title.
 * - $head: Markup for the HEAD section (including meta tags, keyword tags, and
 *   so on).
 * - $styles: Style tags necessary to import all CSS files for the page.
 * - $scripts: Script tags necessary to load the JavaScript files and settings
 *   for the page.
 * - $jump_link_target: The HTML ID of the element that the "Jump to Navigation"
 *   link should jump to. Defaults to "main-menu".
 * - $page_top: Initial markup from any modules that have altered the
 *   page. This variable should always be output first, before all other dynamic
 *   content.
 * - $page: The rendered page content.
 * - $page_bottom: Final closing markup from any modules that have altered the
 *   page. This variable should always be output last, after all other dynamic
 *   content.
 * - $classes: String of classes that can be used to style contextually through
 *   CSS. It should be placed within the <body> tag. When selecting through CSS
 *   it's recommended that you use the body tag, e.g., "body.front". It can be
 *   manipulated through the variable $classes_array from preprocess functions.
 *   The default values can contain one or more of the following:
 *   - front: Page is the home page.
 *   - not-front: Page is not the home page.
 *   - logged-in: The current viewer is logged in.
 *   - not-logged-in: The current viewer is not logged in.
 *   - node-type-[node type]: When viewing a single node, the type of that node.
 *     For example, if the node is a Blog entry, this would be "node-type-blog".
 *     Note that the machine name of the content type will often be in a short
 *     form of the human readable label.
 *   The following only apply with the default sidebar_first and sidebar_second
 *   block regions:
 *     - two-sidebars: When both sidebars have content.
 *     - no-sidebars: When no sidebar content exists.
 *     - one-sidebar and sidebar-first or sidebar-second: A combination of the
 *       two classes when only one of the two sidebars have content.
 *
 * @see template_preprocess()
 * @see template_preprocess_html()
 * @see zen_preprocess_html()
 * @see template_process()
 */


 //dpm($head_title_array);
 //dpm($head_title);
 //dpm($fields);
 //dpm( get_defined_vars() );
 //dpm($head);
 //dpm($head_elements);
 
 //dpm($head);
 //dpm(get_defined_vars());
 //dpm($fields);
 //dpm($head_title_array);

 $basepath = "/"; //base_path();
 $path_to_zen = drupal_get_path('theme', 'zen');
 $path_to_og = drupal_get_path('theme', 'og');
?>

<!doctype html>
<html>
<head>
	
  <?php //print $head;//unnecessary because were doing meta and keywords manually in template.php ?>
  
  <meta name='keywords' content="<?php print $keywords;?>"> 
  <meta name='description' content="<?php print $description;?>"> 
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title><?php 
  	if (isset($head_title)) {
  		print $head_title;
  	}
  	else {print "Our Generation Dolls";}
  ?></title>




  <?php drupal_add_library('system', 'ui'); ?>

  <!-- Honest TypeKit -->
  <script type="text/javascript" src="http://use.typekit.com/sml0wdr.js"></script>
  <script type="text/javascript">try{Typekit.load();}catch(e){}</script>

  <?php print $styles; ?>
  <?php print $scripts; ?>
  
  
  <link rel="stylesheet" type="text/css" href="/sites/all/libraries/shadowbox/shadowbox.css">
  
  <script type="text/javascript" src="/sites/all/libraries/shadowbox/shadowbox.js"></script>
  <script type="text/javascript">
  Shadowbox.init({
    handleOversize: "drag",
    animate: false,
    fadeDuration:.2,
    initialHeight: 1,
    initialWidth: 1,
    overlayOpacity: .75,
    resizeDuration: 0,
    animateFade: true,
    overlayColor: "#fff",
    onFinish:   function () { showOverlay() },
    onClose: function () { hideOverlay() }
  });

  function showOverlay(){
    log("showOverlay");
    jQuery('#sb-nav-close').addClass('complete');
    jQuery('#sb-wrapper').addClass('complete');
  }
  function hideOverlay(){
    log("hideOverlay");
    jQuery('#sb-nav-close').removeClass('complete');
    jQuery('#sb-wrapper').removeClass('complete');
  }
  </script>

<!--[if lt IE 10]>
	<style type="text/css" media="all">
	@import url("/<?php print $path_to_og; ?>/css/ie.css");
	</style>
<![endif]-->

<!--[if lt IE 8]>
	<style type="text/css" media="all">
	@import url("/<?php print $path_to_og; ?>/css/ie7.css");
	</style>
<![endif]-->

</head>

<body class="<?php print $classes; ?>" <?php print $attributes;?>>
  <div id="skip-link">
    <a href="#<?php print $jump_link_target; ?>" class="element-invisible element-focusable"><?php print t('Jump to Navigation'); ?></a>
  </div>
  <?php print $page_top; ?>
  <?php print $page; ?>
  <?php print $page_bottom; ?>
</body>

</html>
